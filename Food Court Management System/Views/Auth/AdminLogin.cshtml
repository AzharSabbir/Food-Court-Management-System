@model DigitalArena.Models.LoginModel
@{
    ViewBag.Title = "Admin Login";
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Admin Login - Digital Arena</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />
    <style>
        body {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f8f9fa;
        }

        .login-card {
            width: 100%;
            max-width: 400px;
            padding: 2rem;
            box-shadow: 0 0 25px rgba(0, 0, 0, 0.1);
            border-radius: 1rem;
            background-color: white;
        }

        .password-toggle {
            position: absolute;
            top: 50%;
            right: 1rem;
            transform: translateY(-50%);
            cursor: pointer;
            color: gray;
        }
    </style>
</head>
<body>
    @if (ViewBag.Message != null)
    {
        var alertClass = ViewBag.IsSuccess != null && (bool)ViewBag.IsSuccess ? "success" : "danger";
        <div class="alert alert-@alertClass alert-dismissible fade show mt-3" role="alert" id="statusAlert">
            @ViewBag.Message
        </div>
        <script>
            setTimeout(() => {
                const alertBox = document.getElementById('statusAlert');
                if (alertBox) alertBox.remove();
            }, 2000);
        </script>
    }

    <header class="p-3 bg-white fixed-top">
        <div class="container-fluid d-flex align-items-center">
            <a href="/" class="d-flex align-items-center text-decoration-none">
                <img src="~/assets/images/site-logo.png" alt="Logo" width="40" height="40" class="me-2" />
                <span class="fs-5 fw-bold text-dark">Dine Avenue</span>
            </a>
        </div>
    </header>

    <div class="login-card">
        <h5 class="text-center text-muted mb-1">You are logging in as</h5>
        <h4 class="fw-bold text-primary text-center mb-3">Admin</h4>
        <form method="post" action="@Url.Action("AdminLogin", "Auth")">
            <input type="hidden" name="LoginType" value="Admin" />

            <div class="form-group mb-3">
                @Html.TextBoxFor(m => m.Username, new
                {
                    @class = "form-control",
                    @type = "email",
                    placeholder = "Email",
                    required = "required"
                })

                @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-3 position-relative">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", id = "passwordInput", placeholder = "Password", required = "required" })
                <span class="password-toggle" onclick="togglePasswordVisibility()">
                    <i class="bi bi-eye" id="eyeIcon"></i>
                </span>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="btn btn-primary w-100 mb-3">Login</button>
        </form>
    </div>

    <script>
        function togglePasswordVisibility() {
            const input = document.getElementById("passwordInput");
            const icon = document.getElementById("eyeIcon");
            const isHidden = input.type === "password";
            input.type = isHidden ? "text" : "password";
            icon.classList.toggle("bi-eye", !isHidden);
            icon.classList.toggle("bi-eye-slash", isHidden);
        }
    </script>
</body>
</html>
